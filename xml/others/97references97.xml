<REFERENCES>
  <!--  taken from http://mitpress.mit.edu/sicp/full-text/book/book-Z-H-36.html#%_chap_Temp_849 -->
  <NAME>References</NAME>

  <REFERENCE>
    Abelson, Harold, Andrew Berlin, Jacob Katzenelson,
    William McAllister,
    Guillermo Rozas, Gerald Jay Sussman, and Jack Wisdom. 1992.  The
    Supercomputer Toolkit: A general framework for special-purpose
    computing.  <EM>International Journal of High-Speed Electronics</EM>
    3(3):337-361.</REFERENCE>

  <REFERENCE>
    Allen, John.  1978.  <EM>Anatomy of Lisp.</EM> New York: McGraw-Hill.
  </REFERENCE>

  <REFERENCE>ANSI X3.226-1994. <EM>American National Standard for Information
      Systems<EMDASH/>Programming Language<EMDASH/>Common Lisp.</EM></REFERENCE>

  <REFERENCE>Appel, Andrew W.  1987.  Garbage collection can be faster than stack
    allocation.  <EM>Information Processing Letters</EM> 25(4):275-279.</REFERENCE>

  <REFERENCE>Backus, John.  1978.  Can programming be liberated from the von
    Neumann style?  <EM>Communications of the ACM</EM> 21(8):613-641.</REFERENCE>

  <REFERENCE>Baker, Henry G., Jr.  1978.  List processing in real time on a serial
    computer.  <EM>Communications of the ACM</EM> 21(4):280-293.</REFERENCE>

  <REFERENCE>Batali, John, Neil Mayle, Howard Shrobe, Gerald Jay Sussman, and
    Daniel Weise.  1982.  The Scheme-81 architecture<EMDASH/>System and chip.
    In <EM>Proceedings of the MIT Conference on Advanced Research in
      VLSI,</EM> edited by Paul Penfield, Jr. Dedham, MA: Artech House.</REFERENCE>

  <REFERENCE>Borning, Alan.  1977.  ThingLab<EMDASH/>An object-oriented system for
    building simulations using constraints. In <EM>Proceedings of the 5th
      International Joint Conference on Artificial Intelligence.</EM></REFERENCE>

  <REFERENCE>Borodin, Alan, and Ian Munro.  1975.  <EM>The Computational
      Complexity of Algebraic and Numeric Problems.</EM> New York: American
    Elsevier.</REFERENCE>

  <REFERENCE>Chaitin, Gregory J.  1975.  Randomness and mathematical proof.  <EM>Scientific American</EM> 232(5):47-52.</REFERENCE>

  <REFERENCE>Church, Alonzo.  1941.  <EM>The Calculi of Lambda-Conversion.</EM>
    Princeton, N.J.: Princeton University Press.</REFERENCE>

  <REFERENCE>Clark, Keith L.  1978.  Negation as failure.  In <EM>Logic and Data
      Bases.</EM> New York: Plenum Press, pp. 293-322.</REFERENCE>

  <REFERENCE>Clinger, William.  1982.  Nondeterministic call by need is neither
    lazy nor by name. In <EM>Proceedings of the ACM Symposium on Lisp and
      Functional Programming,</EM> pp. 226-234.</REFERENCE>

  <REFERENCE>Clinger, William, and Jonathan Rees.  1991.  Macros that work.  In
    <EM>Proceedings of the 1991 ACM Conference on Principles of
      Programming Languages,</EM> pp. 155-162.</REFERENCE>

  <REFERENCE>Colmerauer A., H. Kanoui, R. Pasero, and P. Roussel.  1973.  Un syst<EGRAVE_LOWER/>me
    de communication homme-machine en fran<CCEDIL_LOWER/>ais.  Technical report,
    Groupe Intelligence Artificielle, Universit<EACUTE_LOWER/> d'Aix Marseille,
    Luminy.</REFERENCE>

  <REFERENCE>Cormen, Thomas, Charles Leiserson, and Ronald Rivest.  1990. <EM>Introduction to Algorithms.</EM> Cambridge, MA: MIT Press.</REFERENCE>

  <REFERENCE>Darlington, John, Peter Henderson, and David Turner.  1982.  <EM>Functional Programming and Its Applications.</EM> New York: Cambridge
    University Press.</REFERENCE>

  <REFERENCE>Dijkstra, Edsger W. 1968a.  The structure of the <QUOTE>THE</QUOTE>
    multiprogramming system.  <EM>Communications of the ACM</EM>
    11(5):341-346.</REFERENCE>

  <REFERENCE>Dijkstra, Edsger W. 1968b.  Cooperating sequential processes.  In <EM>Programming Languages</EM>, edited by F. Genuys. New York: Academic Press, pp.
    43-112.</REFERENCE>

  <REFERENCE>Dinesman, Howard P.  1968.  <EM>Superior Mathematical Puzzles</EM>.  New
    York: Simon and Schuster.</REFERENCE>

  <REFERENCE>deKleer, Johan, Jon Doyle, Guy Steele, and Gerald J. Sussman.  1977.
    AMORD: Explicit control of reasoning.  In <EM>Proceedings of the ACM
      Symposium on Artificial Intelligence and Programming Languages,</EM> pp.
    116-125.</REFERENCE>

  <REFERENCE>Doyle, Jon. 1979. A truth maintenance system. <EM>Artificial
      Intelligence</EM> 12:231-272.</REFERENCE>

  <REFERENCE>Feigenbaum, Edward, and Howard Shrobe. 1993. The Japanese National
    Fifth Generation Project: Introduction, survey, and evaluation.  In <EM>Future Generation Computer Systems,</EM> vol. 9, pp. 105-117.</REFERENCE>
  
  <REFERENCE>Feeley, Marc.  1986.  Deux approches <AGRAVE_LOWER/> l'implantation du
    language Scheme.  Masters thesis, Universit<EACUTE_LOWER/> de Montr<EACUTE_LOWER/>al.</REFERENCE>

  <REFERENCE>Feeley, Marc and Guy Lapalme.  1987.  Using closures for code
    generation.  <EM>Journal of Computer Languages</EM> 12(1):47-66.</REFERENCE>

  <REFERENCE>Feller, William.  1957.  <EM>An Introduction to Probability Theory
      and Its Applications,</EM> volume 1. New York: John Wiley <AMP/> Sons.</REFERENCE>

  <REFERENCE>Fenichel, R., and J. Yochelson.  1969.  A Lisp garbage collector for
    virtual memory computer systems.  <EM>Communications of the ACM</EM>

    12(11):611-612.</REFERENCE>

  <REFERENCE>Floyd, Robert. 1967. Nondeterministic algorithms. <EM>JACM,</EM> 14(4):636-644.</REFERENCE>

  <REFERENCE>Forbus, Kenneth D., and Johan deKleer.  1993. <EM>Building Problem
      Solvers.</EM> Cambridge, MA: MIT Press.</REFERENCE>

  <REFERENCE>Friedman, Daniel P., and David S. Wise.  1976.  CONS should not
    evaluate its arguments. In <EM>Automata, Languages, and Programming:
      Third International Colloquium,</EM> edited by S. Michaelson and R.
    Milner, pp. 257-284.</REFERENCE>

  <REFERENCE>Friedman, Daniel P., Mitchell Wand, and Christopher T. Haynes. 1992.
    <EM>Essentials of Programming Languages.</EM>  Cambridge, MA: MIT
    Press/McGraw-Hill.</REFERENCE>

  <REFERENCE>Gabriel, Richard P. 1988.  The Why of <EM>Y</EM>.  <EM>Lisp Pointers</EM>
    2(2):15-25.</REFERENCE>

  <REFERENCE>Goldberg, Adele, and David Robson.  1983.  <EM>Smalltalk-80: The
      Language and Its Implementation.</EM> Reading, MA: Addison-Wesley.</REFERENCE>

  <REFERENCE>Gordon, Michael, Robin Milner, and Christopher Wadsworth.  1979.  <EM>Edinburgh LCF.</EM> Lecture Notes in Computer Science, volume 78. New
    York: Springer-Verlag.</REFERENCE>

  <REFERENCE>Gray, Jim, and Andreas Reuter. 1993. <EM>Transaction Processing:
      Concepts and Models.</EM> San Mateo, CA: Morgan-Kaufman.</REFERENCE>

  <REFERENCE>Green, Cordell.  1969.  Application of theorem proving to problem
    solving.  In <EM>Proceedings of the International Joint Conference on
      Artificial Intelligence,</EM> pp. 219-240.</REFERENCE>

  <REFERENCE>Green, Cordell, and Bertram Raphael.  1968.  The use of
    theorem-proving techniques in question-answering systems.  In <EM>Proceedings of the ACM National Conference,</EM> pp. 169-181.</REFERENCE>

  <REFERENCE>Griss, Martin L.  1981.  Portable Standard Lisp, a brief overview.
    Utah Symbolic Computation Group Operating Note 58, University of Utah.</REFERENCE>

  <REFERENCE>Guttag, John V.  1977.  Abstract data types and the development of
    data structures.  <EM>Communications of the ACM</EM> 20(6):397-404.</REFERENCE>

  <REFERENCE>Hamming, Richard W.  1980.  <EM>Coding and Information Theory.</EM>

    Englewood Cliffs, N.J.: Prentice-Hall.</REFERENCE>

  <REFERENCE>Hanson, Christopher P.  1990.  Efficient stack allocation for
    tail-recursive languages.  In <EM>Proceedings of ACM Conference on
      Lisp and Functional Programming,</EM> pp. 106-118.</REFERENCE>

  <REFERENCE>Hanson, Christopher P.  1991.  A syntactic closures macro facility.
    <EM>Lisp Pointers,</EM> 4(3).</REFERENCE>

  <REFERENCE>Hardy, Godfrey H.  1921.  Srinivasa Ramanujan.  <EM>Proceedings of
      the London Mathematical Society</EM> XIX(2).</REFERENCE>

  <REFERENCE>Hardy, Godfrey H., and E. M. Wright.  1960.  <EM>An Introduction to
      the Theory of Numbers.</EM>  4th edition.  New York: Oxford University
    Press.</REFERENCE>

  <REFERENCE>Havender, J. 1968. Avoiding deadlocks in multi-tasking systems. <EM>IBM Systems Journal</EM> 7(2):74-84.</REFERENCE>

  <REFERENCE>Hearn, Anthony C.  1969.  Standard Lisp.  Technical report AIM-90,
    Artificial Intelligence Project, Stanford University.</REFERENCE>

  <REFERENCE>Henderson, Peter. 1980.  <EM>Functional Programming: Application and
      Implementation.</EM> Englewood Cliffs, N.J.: Prentice-Hall.</REFERENCE>

  <REFERENCE>Henderson. Peter. 1982. Functional Geometry. In <EM>Conference Record
      of the 1982 ACM Symposium on Lisp and Functional Programming,</EM>
    pp. 179-187.</REFERENCE>

  <REFERENCE>Hewitt, Carl E.  1969.  PLANNER: A language for proving theorems in
    robots.  In <EM>Proceedings of the International Joint Conference on
      Artificial Intelligence,</EM> pp. 295-301.</REFERENCE>

  <REFERENCE>Hewitt, Carl E.  1977.  Viewing control structures as patterns of
    passing messages.  <EM>Journal of Artificial Intelligence</EM>
    8(3):323-364.</REFERENCE>

  <REFERENCE>Hoare, C. A. R. 1972.  Proof of correctness of data representations.
    <EM>Acta Informatica</EM> 1(1).</REFERENCE>

  <REFERENCE>Hodges, Andrew. 1983.  <EM>Alan Turing: The Enigma.</EM> New York: Simon
    and Schuster.</REFERENCE>

  <REFERENCE>Hofstadter, Douglas R.  1979.  <EM>G<OUML_LOWER/>del, Escher, Bach: An Eternal
      Golden Braid.</EM> New York: Basic Books.</REFERENCE>

  <REFERENCE>Hughes, R. J. M.  1990.  Why functional programming matters.  In <EM>Research Topics in Functional Programming</EM>, edited by David Turner.
    Reading, MA: Addison-Wesley, pp. 17-42.</REFERENCE>

  <REFERENCE>IEEE Std 1178-1990.  1990.  <EM>IEEE Standard for the Scheme
      Programming Language.</EM></REFERENCE>

  <REFERENCE>Ingerman, Peter, Edgar Irons, Kirk Sattley, and Wallace Feurzeig;
    assisted by M. Lind, Herbert Kanner, and Robert Floyd.  1960.  THUNKS:
    A way of compiling procedure statements, with some comments on
    procedure declarations.  Unpublished manuscript.  (Also, private
    communication from Wallace Feurzeig.)</REFERENCE>

  <REFERENCE>Kaldewaij, Anne. 1990.  <EM>Programming: The Derivation of
      Algorithms.</EM> New York: Prentice-Hall.</REFERENCE>

  <REFERENCE>Kohlbecker, Eugene Edmund, Jr. 1986.  Syntactic extensions in the
    programming language Lisp.  Ph.D. thesis, Indiana University.</REFERENCE>

  <REFERENCE>Konopasek, Milos, and Sundaresan Jayaraman.  1984.  <EM>The TK!Solver
      Book: A Guide to Problem-Solving in Science, Engineering, Business,
      and Education.</EM> Berkeley, CA: Osborne/McGraw-Hill.</REFERENCE>

  <REFERENCE>Knuth, Donald E.  1973.  <EM>Fundamental Algorithms.</EM> Volume 1 of
    <EM>The Art of Computer Programming.</EM>  2nd edition. Reading, MA:
    Addison-Wesley.</REFERENCE>

  <REFERENCE>Knuth, Donald E.  1981.  <EM>Seminumerical Algorithms.</EM> Volume 2 of
    <EM>The Art of Computer Programming.</EM>  2nd edition. Reading, MA:
    Addison-Wesley.</REFERENCE>

  <REFERENCE>Kowalski, Robert.  1973.  Predicate logic as a programming language.
    Technical report 70, Department of Computational Logic, School of
    Artificial Intelligence, University of Edinburgh.</REFERENCE>

  <REFERENCE>Kowalski, Robert.  1979.  <EM>Logic for Problem Solving.</EM> New York:
    North-Holland.</REFERENCE>

  <REFERENCE>Lamport, Leslie. 1978.  Time, clocks, and the ordering of events in a
    distributed system.  <EM>Communications of the ACM</EM> 21(7):558-565.</REFERENCE>

  <REFERENCE>Lampson, Butler, J. J. Horning, R.  London, J. G. Mitchell, and G. K.
    Popek.  1981.  Report on the programming language Euclid.  Technical
    report, Computer Systems Research Group, University of Toronto.</REFERENCE>

  <REFERENCE>Landin, Peter.  1965.  A correspondence between Algol 60 and Church's
    lambda notation: Part I.  <EM>Communications of the ACM</EM>
    8(2):89-101.</REFERENCE>

  <REFERENCE>Lieberman, Henry, and Carl E. Hewitt. 1983. A real-time garbage
    collector based on the lifetimes of objects. <EM>Communications of
      the ACM</EM> 26(6):419-429.</REFERENCE>

  <REFERENCE>Liskov, Barbara H., and Stephen N. Zilles.  1975.  Specification
    techniques for data abstractions.  <EM>IEEE Transactions on Software
      Engineering</EM> 1(1):7-19.</REFERENCE>

  <REFERENCE>McAllester, David Allen.  1978.  A three-valued truth-maintenance
    system.  Memo 473, MIT Artificial Intelligence Laboratory.</REFERENCE>

  <REFERENCE>McAllester, David Allen.  1980.  An outlook on truth maintenance.
    Memo 551, MIT Artificial Intelligence Laboratory.</REFERENCE>

  <REFERENCE>McCarthy, John.  1960.  Recursive functions of symbolic expressions
    and their computation by machine.  <EM>Communications of the ACM</EM>
    3(4):184-195.</REFERENCE>

  <REFERENCE>McCarthy, John.  1967.  A basis for a mathematical theory of
    computation.  In <EM>Computer Programing and Formal Systems</EM>, edited
    by P. Braffort and D. Hirschberg.  North-Holland.</REFERENCE>

  <REFERENCE>McCarthy, John.  1978.  The history of Lisp.  In <EM>Proceedings of
      the ACM SIGPLAN Conference on the History of Programming Languages.</EM></REFERENCE>

  <REFERENCE>McCarthy, John, P. W. Abrahams, D. J. Edwards, T. P. Hart, and M. I.
    Levin.  1965.  <EM>Lisp 1.5 Programmer's Manual.</EM>  2nd edition.
    Cambridge, MA: MIT Press.</REFERENCE>

  <REFERENCE>McDermott, Drew, and Gerald Jay Sussman.  1972. Conniver reference
    manual.  Memo 259, MIT Artificial Intelligence Laboratory.</REFERENCE>

  <REFERENCE>Miller, Gary L.  1976.  Riemann's Hypothesis and tests for primality.
    <EM>Journal of Computer and System Sciences</EM> 13(3):300-317.</REFERENCE>

  <REFERENCE>Miller, James S., and Guillermo J. Rozas. 1994.  Garbage collection is
    fast, but a stack is faster.  Memo 1462, MIT Artificial Intelligence
    Laboratory.</REFERENCE>

  <REFERENCE>Moon, David.  1978.  MacLisp reference manual, Version 0.  Technical
    report, MIT Laboratory for Computer Science.</REFERENCE>

  <REFERENCE>Moon, David, and Daniel Weinreb.  1981.  Lisp machine manual.
    Technical report, MIT Artificial Intelligence Laboratory.</REFERENCE>

  <REFERENCE>Morris, J. H., Eric Schmidt, and Philip Wadler.  1980.  Experience
    with an applicative string processing language.  In <EM>Proceedings
      of the 7th Annual ACM SIGACT/SIGPLAN Symposium on the Principles of
      Programming Languages.</EM></REFERENCE>

  <REFERENCE>Phillips, Hubert.  1934. <EM>The Sphinx Problem Book</EM>.  London: Faber
    and Faber.</REFERENCE>

  <REFERENCE>Pitman, Kent.  1983.  The revised MacLisp Manual (Saturday evening
    edition).  Technical report 295, MIT Laboratory for Computer Science.</REFERENCE>

  <REFERENCE>Rabin, Michael O. 1980. Probabilistic algorithm for testing primality.
    <EM>Journal of Number Theory</EM> 12:128-138.</REFERENCE>

  <REFERENCE>Raymond, Eric.  1993. <EM>The New Hacker's Dictionary.</EM> 2nd edition.
    Cambridge, MA: MIT Press.</REFERENCE>

  <REFERENCE>Raynal, Michel. 1986. <EM>Algorithms for Mutual Exclusion.</EM>
    Cambridge, MA: MIT Press.</REFERENCE>

  <REFERENCE>Rees, Jonathan A., and Norman I. Adams IV. 1982.  T: A dialect of Lisp
    or, lambda: The ultimate software tool.  In <EM>Conference Record of
      the 1982 ACM Symposium on Lisp and Functional Programming,</EM> pp.
    114-122.</REFERENCE>

  <REFERENCE>Rees, Jonathan, and William Clinger (eds). 1991.  The revised<LATEXINLINE>$^4$</LATEXINLINE>
    report on the algorithmic language Scheme.  <EM>Lisp Pointers,</EM> 4(3).</REFERENCE>

  <REFERENCE>Rivest, Ronald, Adi Shamir, and Leonard Adleman.  1977.  A method for
    obtaining digital signatures and public-key cryptosystems. Technical
    memo LCS/TM82, MIT Laboratory for Computer Science.</REFERENCE>

  <REFERENCE>Robinson, J. A. 1965.  A machine-oriented logic based on the
    resolution principle.  <EM>Journal of the ACM</EM> 12(1):23.</REFERENCE>

  <REFERENCE>Robinson, J. A. 1983.  Logic programming<EMDASH/>Past, present, and future.
    <EM>New Generation Computing</EM> 1:107-124.</REFERENCE>

  <REFERENCE>Sagade, Y. 2015. <LINK address="http://www.ysagade.nl/2015/04/12/sicp-change-growth/">SICP exercise 1.14</LINK>
    </REFERENCE>
    
  <REFERENCE>Spafford, Eugene H.  1989.  The Internet Worm: Crisis and aftermath.
    <EM>Communications of the ACM</EM> 32(6):678-688.</REFERENCE>

  <REFERENCE>Steele, Guy Lewis, Jr.  1977.  Debunking the <QUOTE>expensive procedure
      call</QUOTE> myth.  In <EM>Proceedings of the National Conference of the
      ACM,</EM> pp. 153-62.</REFERENCE>

  <REFERENCE>Steele, Guy Lewis, Jr.  1982.  An overview of Common Lisp.  In <EM>Proceedings of the ACM Symposium on Lisp and Functional Programming,</EM>
    pp. 98-107.</REFERENCE>

  <REFERENCE>Steele, Guy Lewis, Jr.  1990.  <EM>Common Lisp: The Language.</EM> 2nd
    edition.  Digital Press.</REFERENCE>

  <REFERENCE>Steele, Guy Lewis, Jr., and Gerald Jay Sussman.  1975.  Scheme: An
    interpreter for the extended lambda calculus.  Memo 349, MIT
    Artificial Intelligence Laboratory.</REFERENCE>

  <REFERENCE>Steele, Guy Lewis, Jr., Donald R. Woods, Raphael A. Finkel, Mark R.
    Crispin, Richard M. Stallman, and Geoffrey S. Goodfellow.  1983.  <EM>The Hacker's Dictionary.</EM> New York: Harper 
<AMP/> Row.</REFERENCE>

  <REFERENCE>Stoy, Joseph E.  1977.  <EM>Denotational Semantics.</EM> Cambridge, MA:
    MIT Press.</REFERENCE>

  <REFERENCE>Sussman, Gerald Jay, and Richard M. Stallman.  1975.  Heuristic
    techniques in computer-aided circuit analysis.  <EM>IEEE Transactions
      on Circuits and Systems</EM> CAS-22(11):857-865.</REFERENCE>

  <REFERENCE>Sussman, Gerald Jay, and Guy Lewis Steele Jr.  1980.  Constraints<EMDASH/>A
    language for expressing almost-hierarchical descriptions.  <EM>AI
      Journal</EM> 14:1-39.</REFERENCE>

  <REFERENCE>Sussman, Gerald Jay, and Jack Wisdom.  1992. Chaotic evolution of the
    solar system.  <EM>Science</EM> 257:256-262.</REFERENCE>

  <REFERENCE>Sussman, Gerald Jay, Terry Winograd, and Eugene Charniak.  1971.
    Microplanner reference manual.  Memo 203A, MIT Artificial Intelligence
    Laboratory.</REFERENCE>

  <REFERENCE>Sutherland, Ivan E.  1963.  SKETCHPAD: A man-machine graphical
    communication system.  Technical report 296, MIT Lincoln Laboratory.</REFERENCE>

  <REFERENCE>Teitelman, Warren.  1974.  Interlisp reference manual.  Technical
    report, Xerox Palo Alto Research Center.</REFERENCE>

  <REFERENCE>Thatcher, James W., Eric G. Wagner, and Jesse B. Wright. 1978.
    Data type specification: Parameterization and the power of
    specification techniques. In <EM>Conference Record of the Tenth Annual ACM
      Symposium on Theory of Computing</EM>, pp. 119-132.

    Turner, David.  1981.  The future of applicative languages.  In <EM>Proceedings of the 3rd European Conference on Informatics,</EM> Lecture
    Notes in Computer Science, volume 123. New York: Springer-Verlag, pp.
    334-348.</REFERENCE>

  <REFERENCE>Wand, Mitchell.  1980.  Continuation-based program transformation
    strategies.  <EM>Journal of the ACM</EM> 27(1):164-180.</REFERENCE>

  <REFERENCE>Waters, Richard C.  1979.  A method for analyzing loop programs.  <EM>IEEE Transactions on Software Engineering</EM> 5(3):237-247.</REFERENCE>

  <REFERENCE>Winograd, Terry.  1971.  Procedures as a representation for data in a
    computer program for understanding natural language.  Technical report
    AI TR-17, MIT Artificial Intelligence Laboratory.</REFERENCE>

  <REFERENCE>Winston, Patrick. 1992. <EM>Artificial Intelligence</EM>.  3rd edition.
    Reading, MA: Addison-Wesley.</REFERENCE>

  <REFERENCE>Zabih, Ramin, David McAllester, and David Chapman.  1987.
    Non-deterministic Lisp with dependency-directed backtracking.
    <EM>AAAI-87</EM>, pp. 59-64.</REFERENCE>

  <REFERENCE>Zippel, Richard.  1979.  Probabilistic algorithms for sparse
    polynomials.  Ph.D. dissertation, Department of Electrical Engineering
    and Computer Science, MIT.</REFERENCE>

  <REFERENCE>Zippel, Richard.  1993.  <EM>Effective Polynomial Computation.</EM>
    Boston, MA: Kluwer Academic Publishers.</REFERENCE>

  <SUBHEADING>
    <NAME>Added References</NAME>
  </SUBHEADING>

  <REFERENCE>Beeckmans, Laurel. 1993. ``The splitting algorithm for egyptian
    fractions<APOS/><APOS/>. <EM>Journal of Number Theory</EM> 43, no. 2 (April
    1993): 173-185. Accessed February 12, 2020.
  </REFERENCE>

  <REFERENCE>Bello-Hernández, Manuel, Manuel Benito, and Emilio Fernández. 2012.
    ``On Egyptian Fractions<APOS/><APOS/>. arXiv:1010.2035v2 [math.NT].
    April 30 2012. Accessed May 4, 2020.
  </REFERENCE>

  <REFERENCE>Bidny, Sophia. 2014. ``The History of Zero<APOS/><APOS/>
    Accessed October 4, 2020.
    http://kobotis.net/math/MathematicalWorlds/Fall2014/131/Presentations/pdf/BidnyS_p1.pdf .
  </REFERENCE>

  <REFERENCE>Black, Paul E. 1998. ``greedy algorithm<APOS/><APOS/>.
    <EM>Dictionary of Algorithms and Data Structures</EM>. Accessed October 8,
    2020. https://xlinux.nist.gov/dads/HTML/greedyalgo.html
  </REFERENCE>

  <REFERENCE>Bleicher, M.N. 1972. ``A New Algorithm for the Expansion of Egyptian
    Fractions<APOS/><APOS/>. <EM>Journal of Number Theory</EM> 4 (1972):
    342-382. Accessed February 24, 2020. doi:
    https://doi.org/10.1016/0022-314X(72)90069-8.
  </REFERENCE>

  <REFERENCE>Brown, Kevin. n.d. ``Reverse Greed for Unit Fractions
    <APOS/><APOS/>. mathpages.com. Accessed April 5, 2020.
    https://www.mathpages.com/home/kmath150/kmath150.htm.
  </REFERENCE>

  <REFERENCE>Brown, Kevin. n.d. ``Egyptian Unit Fractions<APOS/><APOS/>.
    mathpages.com. Accessed April 5, 2020.
    https://www.mathpages.com/home/kmath340/kmath340.htm.
  </REFERENCE>

  <REFERENCE>Brown, Kevin. n.d. ``The 2 Ohm Problem
    <APOS/><APOS/>. mathpages.com. Accessed April 4, 2020.
    https://www.mathpages.com/home/kmath319.htm.
  </REFERENCE>

  <REFERENCE>Bruaw, Scot. 2016. ``Common Fractions<APOS/><APOS/>.
    <EM>GreatScott.com</EM>. Accessed May 4, 2020.
    https://www.greatscott.com/lessons/fractions/.
  </REFERENCE>

  <REFERENCE>Croot, Ernest S. 1999. ``On some questions of
    Erd<LATEXINLINE>\"{o}</LATEXINLINE>s and Graham about Egyptian fractions
    <APOS/><APOS/>. <EM>Mathematika</EM> 46, no. 2 (December 1999): 359-372.
    Accessed May 12, 2020. doi: 10.1112/S0025579300007828.
  </REFERENCE>

  <REFERENCE> Croot, Ernest S., David E Dobbs, John B Friedlander, Andrew J
    Hetzel, and Francesco Pappalardi. 2000. ``Binary Egyptian
    Fractions<APOS/><APOS/>. <EM>Journal of Number Theory</EM>
    84, no. 1 (2000): 63-79. Accessed February 14, 2020.
    doi: https://doi.org/10.1006/jnth.2000.2508.
  </REFERENCE>

  <REFERENCE>Eppstein, David. (n.d.) ``Algorithms for Egyptian Fractions -
    Introduction<APOS/><APOS/>. Accessed January 16, 2020.
    https://www.ics.uci.edu/~eppstein/numth/egypt/intro.html
  </REFERENCE>

  <REFERENCE>Eppstein, David. (n.d.) ``Algorithms for Egyptian Fractions -
    Methods Based on the Binary Number System<APOS/><APOS/>. Accessed January
    16, 2020.
    https://www.ics.uci.edu/\textasciitilde eppstein/numth/egypt/binary.html
  </REFERENCE>

  <REFERENCE>Eppstein, David. (n.d.) ``Algorithms for Egyptian Fractions -
    Reverse Greedy Methods<APOS/><APOS/>. Accessed March 25, 2020.
    https://www.ics.uci.edu/\textasciitilde eppstein/numth/egypt/greed.html
  </REFERENCE>

  <REFERENCE>Eppstein, David. (n.d.) ``Algorithms for Egyptian Fractions -
    Brute Force Methods<APOS/><APOS/>. Accessed April 28, 2020.
    https://www.ics.uci.edu/\textasciitilde eppstein/numth/egypt/force.html
  </REFERENCE>

  <REFERENCE>Erd<LATEXINLINE>\"{o}</LATEXINLINE>s, Paul, and M.N. Bleicher.
    1976. ``Denominators of Egyptian Fractions<APOS/><APOS/>.
    <EM>Journal of Number Theory</EM> 8 (December 1976): 157-168.
  </REFERENCE>

  <REFERENCE>Friedman, Charles N. 1993. ``Sums of Divisors and Egyptian
    Fractions<APOS/><APOS/>. <EM>Journal of Number Theory</EM> 44, no. 3 (1993):
    328-339. Accessed May 4, 2020. doi: https://doi.org/10.1006/jnth.1993.1057 .
  </REFERENCE>

  <REFERENCE> Gillings, Richard J. 1972. <EM>Mathematics in Time of the
    Pharoahs</EM> (MIT Press, 1972).
  </REFERENCE>

  <REFERENCE>Goldmakher, Leo. ``A short(er) proof of the divergence of the
    harmonic series<APOS/><APOS/>. (n.d.) <EM>Department of Mathematics,
    University of Toronto</EM>. Accessed October 8, 2020.
  </REFERENCE>

  <REFERENCE>Golomb, Solomon W. 1962. ``An Algebraic Algorithm for the
    Representation Problems of the Ahmes Papyrus. <APOS/><APOS/> <EM>The
    American Mathematical Monthly</EM> 69, no. 8 (1962): 785-86. Accessed July
    8, 2020. doi:10.2307/2310781.
  </REFERENCE>

  <REFERENCE> Gong, Kevin. 1992. ``Egyptian Fractions<APOS/><APOS/>. Honors
    thesis, University of California, Berkeley, 1992. Accessed February 12, 2020.
  </REFERENCE>

  <REFERENCE>Groisser, David. 2001. ``Peano Axioms for the Natural
    Numbers<APOS/><APOS/>. Accessed October 9, 2020.
    https://people.clas.ufl.edu/groisser/files/peano_axioms.pdf.
  </REFERENCE>

  <REFERENCE>Guy, Richard. 1980. ``Egyptian Fractions<APOS/><APOS/> in
    <EM>Unsolved Problems in Number Theory, Section D11</EM> Springer-Verlag.
  </REFERENCE>

  <REFERENCE>Gyimesi, Eszter, and Gábor Nyul. 2013. ``A note on Golomb<APOS/>s
    method and the continued fraction method for Egyptian fractions.<APOS/>
    <APOS/>. <EM>Annales Mathematicae et Informaticae</EM> 42, (2013): 129-134.
    Accessed October 8, 2020.
    http://publikacio.uni-eszterhazy.hu/2921/1/AMI_42_from129to134.pdf
  </REFERENCE>

  <REFERENCE>Hagedorn, Thomas R. 2000. ``A proof of a conjecture on Egyptian
    fractions<APOS/><APOS/>. <EM>The American Mathematical Monthly</EM> 107,
    no. 1 (January 2000): 62-63. Updated November 8, 2017.
  </REFERENCE>

  <REFERENCE>Huang, Jingjing, and Robert C. Vaughan. 2011. `` Mean value
    theorems for binary Egyptian fractions<APOS/><APOS/>. <EM>Journal of Number
    Theory</EM> 131, no. 9 (2011): 1641-1656. Accessed April 24, 2020.
    doi: https://doi.org/10.1016/j.jnt.2011.04.001 .
  </REFERENCE>

  <REFERENCE> Humenberger, Hans. 2014. ``Egyptian Fractions - representations
    as sums of unit fractions<APOS/><APOS/>. <EM>Mathematics and Computer
    Education</EM> 48, 3 (2014): 268, figure 1. Accessed May 4, 2020.
  </REFERENCE>

  <REFERENCE>Knott, Ron. 2020. ``Egyptian Fractions<APOS/><APOS/>.
    maths.surrey.ac.uk. Updated February 21, 2020.
    http://www.maths.surrey.ac.uk/hosted-sites/R.Knott/Fractions/egyptian.html.
  </REFERENCE>

  <REFERENCE>Knott, Ron. 2020. ``Ahmes Papyrus<APOS/><APOS/>.
    <EM>maths.surrey.ac.uk</EM>. Accessed March 17, 2020.
    http://www.maths.surrey.ac.uk/hosted-sites/R.Knott/Fractions/egyptian.html.
  </REFERENCE>

  <REFERENCE>Kosheleva, Olga, Vladik Kreinovich. 2009.
    ``Egyptian Fractions Revisited<APOS/><APOS/>. <EM>Informatics Educ.</EM>
    8 (April 2009): 35-48. Accessed February 12, 2020.
    doi: 10.26907/1562-5419-2019-22-6-763-768 .
  </REFERENCE>

  <REFERENCE>Koretskyi, Max. 2016.``The simple math behind decimal-binary
    conversion algorithms<APOS/><APOS/>. Accessed October 8, 2020.
    https://indepth.dev/the-simple-math-behind-decimal-binary-conversion-algorithms/.
  </REFERENCE>

  <REFERENCE>Krishnan, Abhijeet, Anton Älgmyr, and Jakob Kogler. 2019.
    ``The Stern-Brocot tree and Farey sequences<APOS/><APOS/>.
    Updated December 1, 2019.
    https://cp-algorithms.com/others/stern_brocot_tree_farey_sequences.html
  </REFERENCE>

<!--  <REFERENCE>Kumar, N. Mohan. 2011. ``Peano's Axioms and Natural
    Numbers<APOS/><APOS/> in <EM>Construction of Number Systems</EM>: pp. 1-8.
    Accessed October 9, 2020.
    https://www.math.wustl.edu/~kumar/courses/310-2011/Peano.pdf
  </REFERENCE>-->

  <REFERENCE>Martin, Greg. 1998. ``Denser Egyptian Fractions<APOS/><APOS/>.
    arXiv:math/9811112 [math.NT]. Accessed March 17, 2020.
  </REFERENCE>

  <REFERENCE>Martin, Greg. 1999. ``Dense Egyptian Fractions<APOS/><APOS/>. <EM>
    American Mathematical Society</EM> 351, no.9 (March 1999): 3641-3657.
    Accessed March 17, 2020.
  </REFERENCE>

  <REFERENCE>MDN Web Docs. 2020. ``Number.MAX_SAFE_INTEGER - JavaScript |
    MDN<APOS/><APOS/>. Updated August 13, 2020.
    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER.
  </REFERENCE>

  <REFERENCE>Ministry of Education Singapore Curriculum Planning and
    Development Division. 2012. <EM>Mathematics Syllabus Primary One to Six</EM>
    (Singapore: 2012). Accessed January 27, 2020.
    https://www.moe.gov.sg/docs/default-source/document/education/syllabuses/sciences/files/mathematics_syllabus_primary_1_to_6.pdf.
  </REFERENCE>

  <REFERENCE>Negash, Dagnachew Jenber. 2018. ``Solutions to Diophantine
    equation of Erd<LATEXINLINE>\"{o}</LATEXINLINE>s-Straus Conjecture<APOS/>
    <APOS/>. arXiv:1812.05684 [math.HO]. December 31, 2018. Accessed October 7,
    2020.
  </REFERENCE>

  <REFERENCE> O'Connor, J J., and E F Robertson. 2000. ``Egyptian
    numeral hieroglyphs<APOS/><APOS/>. <EM>mathshistory.st-andrews.ac.uk</EM>.
    Accessed April 4, 2020.
    https://mathshistory.st-andrews.ac.uk/HistTopics/Egyptian_numerals/.
  </REFERENCE>

  <REFERENCE>Pappalardi, Francesco. 2018. ``Egyptian fractions: from Rhind
    Mathematical Papyrus to Erd<LATEXINLINE>\"{o}</LATEXINLINE>s and Tao<APOS/>
    <APOS/> Updated October 10, 2018.
    http://www.mat.uniroma3.it/users/pappa/missions/slides/Egyptian_presentation.pdf
  </REFERENCE>

  <REFERENCE>Regan, Rick. 2012. ``Converting a Bicimal to a Fraction (Series
    Method)<APOS/><APOS/>. Accessed October 8, 2020.
    https://www.exploringbinary.com/converting-a-bicimal-to-a-fraction-series-method/
  </REFERENCE>

  <REFERENCE>Schwartz,Jeffery L. 2018. ``Application of Egyptian Fractions to
    Parallel Resistors<APOS/><APOS/>. <EM>2018 ASEE Mid-Atlantic Section
    Spring Conference</EM>. Washington, District of Columbia. Accessed April 4,
    2020. https://jee.org/29455.
  </REFERENCE>

  <REFERENCE>Sigler, Laurence E. 2002. ``Fibonacci's Liber Abaci<APOS/><APOS/>
    (trans.), Springer-Verlag. ISBN 0-387-95419-8.
  </REFERENCE>

  <REFERENCE>Stella, Benoît. 2007. ``Oudjat.SVG<APOS/><APOS/>. Wikimedia
    Commons, March 20, 2007. Retrieved October 9, 2020.
    https://commons.wikimedia.org/wiki/File:Oudjat.svg.
  </REFERENCE>

  <REFERENCE>Sylvester, J. J. 1880. ``On a point in the theory of vulgar
    fractions<APOS/><APOS/>. <EM>American Journal of Mathematics</EM> 3, no. 4
    (1880): 332–335.
  </REFERENCE>

  <REFERENCE>Stewart, B.M. 1954. ``Sums of distinct divisors<APO/><APOS/>. <EM>
    American Journal of Mathematics</EM> 76, no. 4 (1954): 779-85. Accessed
    October 7, 2020. doi:10.2307/2372651.
  </REFERENCE>

  <REFERENCE>Stewart, B.M. 1964. ``Egyptian Fractions<APO/><APOS/> In <EM>
    Theory of Numbers</EM> pp. 198-207. The Macmillan Company, 1964.
  </REFERENCE>

  <REFERENCE>Torfs, W., and Blondia, C. 2010. ``Binary TDMA scheduler by means
    of egyptian fractions for real-time WSNs on TMotes<APOS/><APOS/>. <EM>
    2010 The 9th IFIP Annual Mediterranean Ad Hoc Networking Workshop
    Med-Hoc-Net)</EM>: pp. 1-8 Juna-les-Pins, France. Accessed October 7, 2020.
    doi: 10.1109/MEDHOCNET.2010.5546849.
  </REFERENCE>

  <REFERENCE>Wagon, Stan. 1999. <EM>Mathematica in Action Second Edition</EM>.
    Springer-Verlag New York, 1999.
  </REFERENCE>

  <REFERENCE>Weisstein, Eric W. (n.d.) ``Simple Continued Fraction<APOS/><APOS/>.
    <EM>MathWorld</EM>. Accessed October 8, 2020.
    https://mathworld.wolfram.com/SimpleContinuedFraction.html
  </REFERENCE>

  <REFERENCE> Williams, Scoot W. 2008. ``ZERO<APOS/><APOS/>.
    <EM>math.buffalo.edu</EM>. Accessed October 4, 2020.
    http://www.math.buffalo.edu/mad/Ancient-Africa/mad_ancient_egypt_zero.html.
  </REFERENCE>

  <REFERENCE> Williams, Scoot W. 2008. ``ON THE EGYPTIAN ZERO - Mathematicians
    of the African Diaspora<APOS/><APOS/>.
    <EM>math.buffalo.edu</EM>. Accessed October 4, 2020.
    http://www.math.buffalo.edu/mad/Ancient-Africa/mad_ancient_egypt_zero.html.
  </REFERENCE>

  <REFERENCE> Yokota, Hisashi. 1986. ``On a Conjecture of M. N. Bleicher and P.
    Erd<LATEXINLINE>\"{o}</LATEXINLINE>s<APOS/><APOS/>. <EM>Journal of Number
    Theory</EM> 24, no. 1 (1986): 89-94. Accessed April 2, 2020. doi:
    https://doi.org/10.1016/0022-314X(86)90060-0.
  </REFERENCE>

  <REFERENCE> Yokota, Hisashi. 1988. ``Denominators of Egyptian fractions<APOS/>
    <APOS/>. <EM>Journal of Number Theory</EM> 28, no. 3 (1988): 258-271.
    Accessed April 2, 2020. doi: https://doi.org/10.1016/0022-314X(88)90041-8 .
  </REFERENCE>

  <REFERENCE>Zanardo, Alberto. 2018. ``Egyptian Fractions<APOS/><APOS/>.
    <EM>mathenjeans.fr</EM>, 2017-2018. Accessed January 27, 2020.
    https://www.mathenjeans.fr/sites/default/files/comptes-rendus/egyptian_fractions_isiss_20172018.pdf
  </REFERENCE>


</REFERENCES>
